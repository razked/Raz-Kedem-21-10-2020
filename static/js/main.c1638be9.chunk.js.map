{"version":3,"sources":["serviceWorker.js","Components/Styles/GlobalStyles.js","Components/Styles/Themes.js","Components/Header/NavLinks.jsx","Components/Header/SideDrawer.jsx","Components/UI/Hamburger/Hamburger.jsx","Components/Header/ThemeToggleBtn.jsx","store/actions.js","Components/Header/TempatureToggle.jsx","Containers/Header/Header.jsx","Components/Home/CityBox/CityBox.jsx","Components/Home/Forcast/Forcast.jsx","Components/Home/LikeLocation/LikeLocation.jsx","Components/UI/Input.jsx","Components/UI/Select/Select.jsx","Components/Home/SearchBox/SearchBox.jsx","Components/UI/Loader/Loader.jsx","Containers/Home/Home.jsx","Components/Favorites/FavoritePlace/FavoritePlace.jsx","Containers/Favorites/Favorites.jsx","App.jsx","store/reducers/appReducer.js","Language/i18n.js","index.js","images/world.jpg","images/bulb-on.svg","images/bulb-off.svg","images/temp-light.svg","images/temp-dark.svg","images/star-ouline.svg","images/star-full.svg"],"names":["Boolean","window","location","hostname","match","GlobalStyles","createGlobalStyle","theme","body","text","lightTheme","tempatureBtnBG","tempatureBtnText","background","borderHeader","sideDrawer","darkTheme","Wrapper","styled","nav","NavLinks","props","t","useTranslation","links","url","map","item","idx","to","key","exact","onClick","div","Drawer","aside","SideDrawer","left","duration","e","stopPropagation","Button","Hamburger","className","active","type","button","ThemeToggleBtn","dispatch","useDispatch","ThemeLight","useSelector","state","app","themeLight","src","imgSrc","bulbOn","bulbOff","handleBulbImg","alt","celcius","toast","info","tempLight","tempDark","handleTempImg","HeaderDiv","header","AppTitle","WrapperLinks","WrapperDiv","WrapperActionBtns","Header","useState","drawerToggle","setDrawerToggle","Fragment","TempatureToggle","CityBox","data","WeatherText","farenheit","celciusType","selectedPlace","tempature","tempatureType","city","country","Forcast","output","date","moment","format","today","Date","getDate","weatherText","LikeLocation","favorites","liked","setLiked","useEffect","find","place","id","star","starOutline","starFull","val","thumbnail","success","CustomInput","input","Input","placeholder","onChange","value","onBlur","OptionSelect","Select","onMouseDown","selected","LocalizedName","Country","SearchBox","searchVal","setSearchVal","results","setResults","selectOpen","setSelectOpen","getPlacesByQuery","length","process","axios","get","then","res","catch","error","target","Key","LoaderWrapper","Loader","Home","loading","setLoading","locationDisplayed","setLocationDisplayed","forcast","setForcast","cover","thumb","pictures","setPictures","getWeatherById","temp","Temperature","Metric","Value","Imperial","getForcastWeather","DailyForecasts","forEach","element","push","Day","IconPhrase","getLocationImages","urls","regular","worldPic","style","backgroundImage","Title","span","Tempature","FavoritePlace","history","useHistory","weather","setWeather","getWeatherByPlaceId","renderPlaceTempature","NoPlaces","Favorites","favList","App","localFavorites","localStorage","getItem","storedFavorites","JSON","parse","setItem","stringify","userCoordinates","navigator","geolocation","getCurrentPosition","position","lat","coords","latitude","lng","longitude","getWeatherByUserLocation","cordinates","EnglishName","basename","path","component","hideProgressBar","autoClose","pauseOnFocusLoss","initialState","reducer","action","newState","newFavorites","filter","newFavorite","i18n","use","LanguageDetector","initReactI18next","init","resources","en","translations","appName","celciusAlert","FarenheitAlert","home","likeBtn","likedText","unLikedText","searchBox","title","noPlaces","errors","placeTempture","placeTempture2","search","placeIdCall","image","fallbackLng","debug","ns","defaultNS","keySeparator","interpolation","escapeValue","rootReducer","combineReducers","appReducer","store","createStore","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","console","message","module","exports"],"mappings":"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","file":"static/js/main.c1638be9.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createGlobalStyle} from \"styled-components\"\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n  body {\r\n    background: ${({ theme }) => theme.body};\r\n    color: ${({ theme }) => theme.text};\r\n    transition: all 0.50s linear;\r\n  }\r\n\r\n  html {\r\n    font-size: 62.5%;\r\n  }\r\n\r\n  * {\r\n    font-family: \"Assistant\", sans-serif;\r\n    box-sizing: border-box;\r\n    padding: 0;\r\n    margin: 0;\r\n    outline: none;\r\n  }\r\n  `\r\n","export const lightTheme = {\r\n    body: '#f5f8fd',\r\n    text: '#656565',\r\n    tempatureBtnBG: 'black',\r\n    tempatureBtnText: 'white',\r\n    background: '#363537',\r\n    borderHeader: '#c4c4c4',\r\n    sideDrawer: 'white',\r\n}\r\nexport const darkTheme = {\r\n    body: '#39375d',\r\n    text: 'white',\r\n    tempatureBtnBG: 'white',\r\n    tempatureBtnText: 'black',\r\n    background: '#999',\r\n    borderHeader: '#848484',\r\n    sideDrawer: '#39375d',\r\n}","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n// style\r\nconst Wrapper = styled.nav`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  gap: 2rem;\r\n  margin-right: 1rem;\r\n  @media (max-width: 900px) {\r\n    flex-direction: column;\r\n    gap: 3rem;\r\n  }\r\n\r\n  a {\r\n    text-decoration: none;\r\n    font-size: 1.6rem;\r\n    color: ${({ theme }) => theme.text};\r\n    transition: opacity 0.2s ease;\r\n    opacity: 0.7;\r\n    font-weight: 600;\r\n\r\n    &:hover {\r\n      opacity: 1;\r\n      transition: opacity 0.2s ease;\r\n    }\r\n\r\n    &.active {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\n\r\nconst NavLinks = props => {\r\n  const { t } = useTranslation();\r\n\r\n  let linksArr = [\r\n    { text: t(\"header.nav.home\"), url: \"/\" },\r\n    { text: t(\"header.nav.favorites\"), url: \"/favorites\" },\r\n  ];\r\n\r\n  const links = linksArr.map((item, idx) => {\r\n    return (\r\n      <NavLink to={item.url} key={idx} exact onClick={props.onClick}>\r\n        {item.text}\r\n      </NavLink>\r\n    );\r\n  });\r\n\r\n  return <Wrapper>{links}</Wrapper>;\r\n};\r\n\r\nexport default NavLinks;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Fade from \"react-reveal/Fade\";\r\n\r\nimport NavLinks from \"./NavLinks\";\r\n\r\nconst Wrapper = styled.div`\r\n  position: fixed;\r\n  left: 0;\r\n  top: 0;\r\n  z-index: 99;\r\n  height: 100vh;\r\n  width: 100vw;\r\n  background-color: rgba(0, 0, 0, 0.6);\r\n`;\r\n\r\nconst Drawer = styled.aside`\r\n  position: fixed;\r\n  left: 0;\r\n  top: 0;\r\n  z-index: 100;\r\n  height: 100vh;\r\n  width: 70%;\r\n  background: ${({ theme }) => theme.sideDrawer};\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.26);\r\n  padding-top: 7rem;\r\n  @media (min-width: 900px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst SideDrawer = (props) => {\r\n  return (\r\n    <Wrapper onClick={props.onClick}>\r\n      <Fade left duration={500}>\r\n        <Drawer onClick={(e) => e.stopPropagation()}>\r\n          <NavLinks onClick={props.onClick} />\r\n        </Drawer>\r\n      </Fade>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default SideDrawer;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport \"./Hamburger.css\";\r\n\r\nconst Button = styled.div`\r\n  z-index: 100;\r\n  display: none;\r\n\r\n  .hamburger-inner {\r\n    background-color: ${({ theme }) => theme.text};\r\n    &::before {\r\n      background-color: ${({ theme }) => theme.text};\r\n    }\r\n    &::after {\r\n      background-color: ${({ theme }) => theme.text};\r\n    }\r\n  }\r\n\r\n  .is-active {\r\n    .hamburger-inner {\r\n      background-color: ${({ theme }) => theme.text};\r\n      &::before {\r\n        background-color: ${({ theme }) => theme.text};\r\n      }\r\n      &::after {\r\n        background-color: ${({ theme }) => theme.text};\r\n      }\r\n    }\r\n  }\r\n\r\n  @media (max-width: 900px) {\r\n    display: inline-flex;\r\n  }\r\n`;\r\n\r\nconst Hamburger = (props) => {\r\n  return (\r\n    <Button>\r\n      <button\r\n        className={`hamburger hamburger--collapse ${\r\n          props.active ? \"is-active\" : null\r\n        }`}\r\n        type=\"button\"\r\n        onClick={props.onClick}\r\n      >\r\n        <span className=\"hamburger-box\">\r\n          <span className=\"hamburger-inner\"></span>\r\n        </span>\r\n      </button>\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default Hamburger;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport * as actionTypes from \"../../store/actions\";\r\n\r\n\r\n// images\r\nimport bulbOn from \"../../images/bulb-on.svg\";\r\nimport bulbOff from \"../../images/bulb-off.svg\";\r\n\r\n// style\r\nconst Button = styled.button`\r\n  width: 3rem;\r\n  height: 3rem;\r\n  background: transparent;\r\n  border: none;\r\n  cursor: pointer;\r\n  outline: none;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  img {\r\n    width: 100%;\r\n    height: 3rem;\r\n    transform: translateY(-.3rem);\r\n  }\r\n`;\r\n\r\nconst ThemeToggleBtn = () => {\r\n  const dispatch = useDispatch();\r\n  const ThemeLight = useSelector((state) => state.app.themeLight);\r\n\r\n  const themeToggler = () => {\r\n    dispatch({ type: actionTypes.TOGGLE_THEME });\r\n  };\r\n\r\n  const handleBulbImg = () => {\r\n    let imgSrc = bulbOn;\r\n    if (!ThemeLight) {\r\n      imgSrc = bulbOff;\r\n    }\r\n    return imgSrc;\r\n  };\r\n\r\n  return (\r\n    <Button onClick={themeToggler}>\r\n      <img src={handleBulbImg()} alt=\"theme change icon\" />\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default ThemeToggleBtn;\r\n","export const SET_FAVORITE = 'SET_FAVORITE';\r\nexport const RMV_FAVORITE = 'RMV_FAVORITE';\r\nexport const TOGGLE_TEMP = 'TOGGLE_TEMP';\r\nexport const TOGGLE_THEME = 'TOGGLE_THEME';\r\nexport const SET_SELECTED_PLACE = 'SET_SELECTED_PLACE';\r\nexport const SET_FAVORITES_FROM_STORGE = 'SET_FAVORITES_FROM_STORGE'\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport * as actionTypes from \"../../store/actions\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n// images\r\nimport tempLight from \"../../images/temp-light.svg\";\r\nimport tempDark from \"../../images/temp-dark.svg\";\r\n\r\n// style\r\nconst Button = styled.button`\r\n  width: 3rem;\r\n  height: 3rem;\r\n  background: transparent;\r\n  border: none;\r\n  cursor: pointer;\r\n  outline: none;\r\n\r\n  img {\r\n    width: 100%;\r\n    height: 3rem;\r\n  }\r\n`;\r\n\r\nconst ThemeToggleBtn = () => {\r\n  const { t } = useTranslation();\r\n  const dispatch = useDispatch();\r\n  const ThemeLight = useSelector((state) => state.app.themeLight);\r\n  const celcius = useSelector((state) => state.app.celcius);\r\n\r\n  const tempatureToggler = () => {\r\n    dispatch({ type: actionTypes.TOGGLE_TEMP });\r\n    toast.info(!celcius ? t(\"header.celciusAlert\") : t(\"header.FarenheitAlert\"));\r\n  };\r\n\r\n  const handleTempImg = () => {\r\n    let imgSrc = tempLight;\r\n    if (!ThemeLight) {\r\n      imgSrc = tempDark;\r\n    }\r\n    return imgSrc;\r\n  };\r\n\r\n  return (\r\n    <Button onClick={tempatureToggler}>\r\n      <img src={handleTempImg()} alt=\"termometer icon\" />\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default ThemeToggleBtn;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// components\r\nimport SideDrawer from \"../../Components/Header/SideDrawer\";\r\nimport NavLinks from \"../../Components/Header/NavLinks\";\r\nimport Hamburger from \"../../Components/UI/Hamburger/Hamburger\";\r\nimport ThemeToggleBtn from \"../../Components/Header/ThemeToggleBtn\";\r\nimport TempatureToggle from \"../../Components/Header/TempatureToggle\";\r\n\r\n// style\r\nconst HeaderDiv = styled.header`\r\n  width: 100%;\r\n  height: 12vh;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst AppTitle = styled.div`\r\n  a {\r\n    font-size: 3rem;\r\n    font-weight: 600;\r\n    color: ${({ theme }) => theme.text};\r\n    text-decoration: none;\r\n  }\r\n`;\r\n\r\nconst WrapperLinks = styled.div`\r\n  display: inline-flex;\r\n  @media (max-width: 900px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst WrapperDiv = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  gap: 2rem;\r\n`;\r\n\r\nconst WrapperActionBtns = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  padding-left: 1.5rem;\r\n  border-left: 1px solid;\r\n  border-color: ${({ theme }) => theme.borderHeader};\r\n  gap: 0.5rem;\r\n  @media (max-width: 900px) {\r\n    border: none;\r\n  }\r\n`;\r\n\r\nconst Header = () => {\r\n  const { t } = useTranslation();\r\n  const [drawerToggle, setDrawerToggle] = useState(false);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {drawerToggle && (\r\n        <SideDrawer onClick={() => setDrawerToggle(!drawerToggle)} />\r\n      )}\r\n\r\n      <HeaderDiv>\r\n        <WrapperDiv>\r\n          <Hamburger\r\n            onClick={() => setDrawerToggle(!drawerToggle)}\r\n            active={drawerToggle}\r\n          />\r\n          <AppTitle>\r\n            <Link to=\"/\">{t(\"header.appName\")}</Link>\r\n          </AppTitle>\r\n        </WrapperDiv>\r\n\r\n        <WrapperDiv>\r\n          <WrapperLinks>\r\n            <NavLinks />\r\n          </WrapperLinks>\r\n\r\n          <WrapperActionBtns>\r\n            <ThemeToggleBtn />\r\n            <TempatureToggle />\r\n          </WrapperActionBtns>\r\n        </WrapperDiv> \r\n      </HeaderDiv>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport \"./CityBox.scss\";\r\n\r\nconst CityBox = (props) => {\r\n  const {\r\n    WeatherText,\r\n    celcius,\r\n    farenheit,\r\n  } = props.data;\r\n\r\n  const celciusType = useSelector((state) => state.app.celcius);\r\n  const selectedPlace = useSelector((state) => state.app.selectedPlace);\r\n\r\n  let tempature = celciusType ? celcius : farenheit;\r\n  let tempatureType = celciusType ? \"c\" : \"f\";\r\n\r\n  return (\r\n    <div className=\"CityBox\">\r\n      <div className=\"title\">\r\n        <div className=\"location\">\r\n          <span className=\"city\">{selectedPlace.city}</span>\r\n          <span className=\"country\">{selectedPlace.country}</span>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"tempature\">\r\n        <span className=\"temp-number\">{tempature}</span>\r\n        <span className=\"temp-type\">{tempatureType}</span>\r\n      </div>\r\n\r\n      <div className=\"weather-text\">{WeatherText}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CityBox;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport \"./Forcast.scss\";\r\n\r\nconst Forcast = (props) => {\r\n\r\n  let output = null;\r\n  if (props.data) {\r\n    output = props.data.map((item, idx) => {\r\n      let date = moment(item.date).format(\"DD.MM\");\r\n      let today = new Date().getDate();\r\n\r\n      return (\r\n        <div key={idx} className={new Date(item.date).getDate() === today ? \"day today\" : \"day\"}>\r\n          <span className=\"date\">{date}</span>\r\n          <span className=\"weather-text\">{item.weatherText}</span>\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n\r\n  return <div className=\"Forcast\">{output}</div>;\r\n};\r\n\r\nexport default Forcast;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport * as actionTypes from \"../../../store/actions\";\r\nimport \"./LikeLocation.scss\";\r\n\r\nimport starOutline from \"../../../images/star-ouline.svg\";\r\nimport starFull from \"../../../images/star-full.svg\";\r\n\r\nconst LikeLocation = (props) => {\r\n  const dispatch = useDispatch();\r\n  const { t } = useTranslation();\r\n\r\n  const favorites = useSelector((state) => state.app.favorites);\r\n  const selectedPlace = useSelector((state) => state.app.selectedPlace);\r\n  const [liked, setLiked] = useState(false);\r\n\r\n  // check if this place is a favorite\r\n  useEffect(() => {\r\n    if (favorites) {\r\n      const isFavoritePlace = favorites.find(\r\n        (place) => place.id === selectedPlace.id\r\n      );\r\n      if (isFavoritePlace) {\r\n        setLiked(true);\r\n      }\r\n    }\r\n  }, [selectedPlace.id, favorites]);\r\n\r\n  const handleToggleLike = () => {\r\n    if (liked) {\r\n      dispatch({ type: actionTypes.RMV_FAVORITE });\r\n    } else {\r\n      dispatch({\r\n        type: actionTypes.SET_FAVORITE,\r\n        val: props.thumbnail,\r\n      });\r\n    }\r\n    setLiked(!liked);\r\n    toast.success(\r\n      !liked ? t(\"home.likeBtn.likedText\") : t(\"home.likeBtn.unLikedText\")\r\n    );\r\n  };\r\n\r\n  let star = starOutline;\r\n  if (liked) {\r\n    star = starFull;\r\n  }\r\n\r\n  return (\r\n    <button className=\"like-btn\" onClick={handleToggleLike}>\r\n      <img src={star} alt=\"star icon\" />\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default LikeLocation;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\n// styled\r\nconst CustomInput = styled.input`\r\n  color: ${({ theme }) => theme.text};\r\n  font-size: 1.6rem;\r\n  width: 100%;\r\n  background-color: transparent;\r\n  border: none;\r\n  border-bottom: 1px solid;\r\n  border-color: ${({ theme }) => theme.text};\r\n  padding: 0 0 0.5rem 0.5rem;\r\n  transition: all .2s ease;\r\n\r\n  &::placeholder {\r\n      color: ${({ theme }) => theme.text};\r\n      transition: all .2s ease;\r\n  }\r\n\r\n  &:focus {\r\n    border-color: #FFCE00;\r\n    transition: all .2s ease;\r\n  }\r\n`;\r\n\r\nconst Input = (props) => {\r\n  return (\r\n    <CustomInput\r\n      type={props.type}\r\n      placeholder={props.placeholder}\r\n      onChange={props.onChange}\r\n      value={props.value}\r\n      onBlur={props.onBlur}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport \"./Select.scss\";\r\n\r\n// styled\r\nconst OptionSelect = styled.div`\r\n  position: absolute;\r\n  top: 120%;\r\n  left: 0;\r\n  width: 100%;\r\n  z-index: 98;\r\n\r\n  .option-select-main {\r\n    background-color: ${({ theme }) => theme.body};\r\n  }\r\n`;\r\n\r\nconst Select = (props) => {\r\n  return (\r\n    <OptionSelect>\r\n      <div className=\"option-select-main\">\r\n        {props.data.map((item, idx) => (\r\n          <div\r\n            className=\"single-option\"\r\n            key={idx}\r\n            onMouseDown={() => {\r\n              props.selected(item);\r\n            }}\r\n          >\r\n            <span>{item.LocalizedName},</span>\r\n            <span>{item.Country.LocalizedName}</span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </OptionSelect>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import React, { useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport * as actionTypes from \"../../../store/actions\";\r\n\r\n// UI\r\nimport Input from \"../../UI/Input\";\r\nimport Select from \"../../UI/Select/Select\";\r\n\r\nimport \"./SearchBox.scss\";\r\n\r\n\r\nconst SearchBox = (props) => {\r\n  const { t } = useTranslation();\r\n  const dispatch = useDispatch();\r\n  const [searchVal, setSearchVal] = useState(\"\");\r\n  const [results, setResults] = useState([]);\r\n  const [selectOpen, setSelectOpen] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    setSearchVal(e.target.value);\r\n      getPlacesByQuery();\r\n  };\r\n\r\n  const getPlacesByQuery = () => {\r\n    if(searchVal.length < 2) {\r\n      return false\r\n    }\r\n    setSelectOpen(true);\r\n    let url = `https://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=${process.env.REACT_APP_WEATHER_API_KEY}&q=${searchVal}`;\r\n\r\n    axios.get(url).then((res) => {\r\n      setResults(res.data);\r\n    })\r\n    .catch((error) => {\r\n      toast.error(`${t('errors.search')}`);\r\n    });\r\n  };\r\n\r\n  const handleSelectedLoaction = (item) => {\r\n    let id = item.Key;\r\n    let city = item.LocalizedName;\r\n    let country = item.Country.LocalizedName;\r\n\r\n    setSelectOpen(false);\r\n\r\n    dispatch({\r\n      type: actionTypes.SET_SELECTED_PLACE,\r\n      val: { id, city, country },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"SearchBox\">\r\n      <Input\r\n        type=\"text\"\r\n        placeholder={t(\"home.searchBox.placeholder\")}\r\n        value={searchVal}\r\n        onChange={handleChange}\r\n        onBlur={() => setSelectOpen(false)}\r\n      />\r\n\r\n      {selectOpen && (\r\n        <Select data={results} selected={handleSelectedLoaction} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport \"./Loader.scss\";\r\n\r\n// styled\r\nconst LoaderWrapper = styled.div`\r\n  .loader-wrapper {\r\n    .lds-ellipsis {\r\n      div {\r\n        background: ${({ theme }) => theme.text};\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <LoaderWrapper>\r\n      <div className=\"loader-wrapper\">\r\n        <div className=\"lds-ellipsis\">\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n        </div>\r\n      </div>\r\n    </LoaderWrapper>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport Slide from \"react-reveal/Slide\";\r\n\r\n// components\r\nimport CityBox from \"../../Components/Home/CityBox/CityBox\";\r\nimport Forcast from \"../../Components/Home/Forcast/Forcast\";\r\nimport LikeLocation from \"../../Components/Home/LikeLocation/LikeLocation\";\r\nimport SearchBox from \"../../Components/Home/SearchBox/SearchBox\";\r\nimport Loader from \"../../Components/UI/Loader/Loader\";\r\n\r\n// style\r\nimport \"./Home.scss\";\r\n\r\n// fall back location image\r\nimport worldPic from \"../../images/world.jpg\";\r\n\r\nconst Home = () => {\r\n  const { t } = useTranslation();\r\n  const selectedPlace = useSelector((state) => state.app.selectedPlace);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const [locationDisplayed, setLocationDisplayed] = useState({\r\n    WeatherText: \"\",\r\n    celcius: 0,\r\n    farenheit: 0,\r\n  });\r\n  const [forcast, setForcast] = useState([]);\r\n  const [pictures, setPictures] = useState({\r\n    cover: \"\",\r\n    thumb: \"\",\r\n  });\r\n\r\n  // get weather on load\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    if (selectedPlace.id) {\r\n      getWeatherById(selectedPlace.id);\r\n    }\r\n  }, [selectedPlace.id]);\r\n\r\n  const getWeatherById = (id) => {\r\n    let url = `https://dataservice.accuweather.com/currentconditions/v1/${id}?apikey=${process.env.REACT_APP_WEATHER_API_KEY}&details=false`;\r\n    axios\r\n      .get(url)\r\n      .then((res) => {\r\n        let data = res.data[0];\r\n        let temp = { ...locationDisplayed };\r\n        temp.WeatherText = data.WeatherText;\r\n        temp.celcius = data.Temperature.Metric.Value;\r\n        temp.farenheit = data.Temperature.Imperial.Value;\r\n        setLocationDisplayed(temp);\r\n\r\n        getForcastWeather(id);\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n        toast.error(`${t(\"errors.placeIdCall\")}`);\r\n      });\r\n  };\r\n\r\n  const getForcastWeather = (id) => {\r\n    let url = `https://dataservice.accuweather.com/forecasts/v1/daily/5day/215854?apikey=${process.env.REACT_APP_WEATHER_API_KEY}`;\r\n    axios\r\n      .get(url)\r\n      .then((res) => {\r\n        let data = res.data.DailyForecasts;\r\n        let temp = [];\r\n        data.forEach((element) => {\r\n          temp.push({\r\n            date: element.Date,\r\n            weatherText: element.Day.IconPhrase,\r\n          });\r\n        });\r\n        setForcast(temp);\r\n        getLocationImages();\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n        toast.error(`${t(\"errors.forcast\")}`);\r\n      });\r\n  };\r\n\r\n  const getLocationImages = () => {\r\n    let query = selectedPlace.city;\r\n    let url = process.env.REACT_APP_UNSPLASH_API_URL + query;\r\n\r\n    // set pictures to empty string before call to evoid image flicker\r\n    let temp = { ...pictures };\r\n    temp.cover = \"\";\r\n    temp.thumb = \"\";\r\n    setPictures(temp);\r\n\r\n    axios\r\n      .get(url)\r\n      .then((res) => {\r\n        if (res.data.results.length > 0) {\r\n          let data = res.data.results[0].urls;\r\n          let temp = { ...pictures };\r\n          temp.cover = data.regular;\r\n          temp.thumb = data.thumb;\r\n          setPictures(temp);\r\n        } else {\r\n          let temp = { ...pictures };\r\n          temp.cover = worldPic;\r\n          temp.thumb = worldPic;\r\n          setPictures(temp);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        toast.error(`${t(\"errors.image\")}`);\r\n      });\r\n    setLoading(false);\r\n  };\r\n\r\n  const renderLoader = () => {\r\n    let loader = <Loader />;\r\n    if (!loading) {\r\n      return null;\r\n    }\r\n    return loader;\r\n  };\r\n\r\n  return (\r\n    <div className=\"Home\">\r\n      <SearchBox />\r\n\r\n      {renderLoader()}\r\n\r\n      {!loading && (\r\n        <Slide left>\r\n          <div\r\n            className=\"location-wrapper\"\r\n            style={{ backgroundImage: `url(${pictures.cover})` }}\r\n          >\r\n            <CityBox data={locationDisplayed} />\r\n\r\n            <Forcast data={forcast} />\r\n\r\n            <LikeLocation thumbnail={pictures.thumb} />\r\n          </div>\r\n        </Slide>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n\r\nimport * as actionTypes from '../../../store/actions';\r\n\r\nimport \"./FavoritePlace.scss\";\r\n\r\n// styled\r\nconst Title = styled.span`\r\n  color: ${({ theme }) => theme.text};\r\n  font-size: 1.6rem;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst Tempature = styled.div`\r\n  color: ${({ theme }) => theme.text};\r\n  font-size: 1.4rem;\r\n  font-weight: 400;\r\n  text-align: center;\r\n`;\r\n\r\n\r\nconst FavoritePlace = (props) => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory()\r\n  const { t } = useTranslation();\r\n  const { id, thumbnail, city, country } = props;\r\n\r\n  const celciusType = useSelector((state) => state.app.celcius);\r\n  const [weather, setWeather] = useState({\r\n    celcius: \"-\",\r\n    farenheit: \"-\",\r\n  });\r\n\r\n  // get place current weather on load\r\n  useEffect(() => {\r\n    if (props.id) {\r\n      getWeatherByPlaceId();\r\n    }\r\n  }, [props.id]);\r\n\r\n  const getWeatherByPlaceId = () => {\r\n    let url = `https://dataservice.accuweather.com/currentconditions/v1/${id}?apikey=${process.env.REACT_APP_WEATHER_API_KEY}&details=false`;\r\n    axios.get(url).then((res) => {\r\n      let temp = { ...weather };\r\n      temp.celcius = res.data[0].Temperature.Metric.Value;\r\n      temp.farenheit = res.data[0].Temperature.Imperial.Value;\r\n      setWeather(temp);\r\n    })\r\n    .catch((error) => {\r\n      toast.error(`${t('errors.placeTempture')} ${city} ${t('errors.placeTempture2')}`);\r\n    });\r\n  };\r\n\r\n  const handleRenderPlaceDetails = () => {\r\n    dispatch({ type: actionTypes.SET_SELECTED_PLACE, val: {id, city, country} });\r\n    history.push('/');\r\n  };\r\n\r\n  const renderPlaceTempature = () => {\r\n    let tempature = celciusType ? weather.celcius : weather.farenheit;\r\n    let tempatureType = celciusType ? \"c\" : \"f\";\r\n\r\n    if(weather.celcius !== '-' || weather.farenheit !== '-') {\r\n      return `${tempature} ${tempatureType}`\r\n    }\r\n  }\r\n  \r\n\r\n  return (\r\n    <div className=\"FavoritePlace\" onClick={handleRenderPlaceDetails}>\r\n      <div\r\n        className=\"thumbnail\"\r\n        style={{ backgroundImage: `url(${thumbnail})` }}\r\n      ></div>\r\n\r\n      <div>\r\n        <Title>{city}</Title>\r\n        <Tempature>{renderPlaceTempature()}</Tempature>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FavoritePlace;\r\n","import React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\n\r\nimport FavoritePlace from \"../../Components/Favorites/FavoritePlace/FavoritePlace\";\r\n\r\nimport \"./Favorites.scss\";\r\n\r\n// styled\r\nconst Title = styled.span`\r\n  color: ${({ theme }) => theme.text};\r\n  font-size: 3rem;\r\n  font-weight: 700;\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nconst NoPlaces = styled.span`\r\n  color: ${({ theme }) => theme.text};\r\n  font-size: 2rem;\r\n  font-weight: 400;\r\n`;\r\n\r\nconst Favorites = () => {\r\n  const { t } = useTranslation();\r\n  const favorites = useSelector((state) => state.app.favorites);\r\n\r\n  let favList = <NoPlaces>{t(\"favorites.noPlaces\")}</NoPlaces>;\r\n  if (favorites && favorites.length > 0) {\r\n    favList = favorites.map((item, idx) => {\r\n      return (\r\n        <FavoritePlace\r\n          id={item.id}\r\n          city={item.city}\r\n          country={item.country}\r\n          thumbnail={item.thumbnail}\r\n          key={idx}\r\n        />\r\n      );\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"Favorites\">\r\n      <Title>{t(\"favorites.title\")}</Title>\r\n      <div className=\"favorites-list\">{favList}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Favorites;\r\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\nimport { ThemeProvider } from \"styled-components\";\nimport { GlobalStyles } from \"./Components/Styles/GlobalStyles\";\nimport { lightTheme, darkTheme } from \"./Components/Styles/Themes\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport axios from \"axios\";\n\nimport * as actionTypes from \"./store/actions\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\n// components\nimport Header from \"./Containers/Header/Header\";\nimport Home from \"./Containers/Home/Home\";\nimport Favorites from \"./Containers/Favorites/Favorites\";\n\nimport \"./App.scss\";\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const ThemeLight = useSelector((state) => state.app.themeLight);\n\n  // set or get user favorites from local storage\n  useEffect(() => {\n    let localFavorites = localStorage.getItem(\"favorites\");\n\n    if (localFavorites) {\n      let storedFavorites = JSON.parse(localFavorites);\n      dispatch({\n        type: actionTypes.SET_FAVORITES_FROM_STORGE,\n        val: storedFavorites,\n      });\n    } else {\n      let favoritesArr = [];\n      localStorage.setItem(\"favorites\", JSON.stringify(favoritesArr));\n    }\n  });\n\n  // get user geolocation if available\n  useEffect(() => {\n    let userCoordinates = [];\n    if (window.navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        let lat = position.coords.latitude;\n        let lng = position.coords.longitude;\n        userCoordinates.push(lat, lng);\n        getWeatherByUserLocation(userCoordinates);\n      });\n    } else {\n      let id = \"215854\";\n      let city = \"Tel Aviv\";\n      let country = \"Israel\";\n\n      dispatch({\n        type: actionTypes.SET_SELECTED_PLACE,\n        val: { id, city, country },\n      });\n    }\n  }, []);\n\n  const getWeatherByUserLocation = (cordinates) => {\n    let url = `https://dataservice.accuweather.com/locations/v1/cities/geoposition/search?apikey=${process.env.REACT_APP_WEATHER_API_KEY}&q=${cordinates[0]},${cordinates[1]}&toplevel=true`;\n    axios\n      .get(url)\n      .then((res) => {\n        let id = res.data.Key;\n        let city = res.data.EnglishName;\n        let country = res.data.Country.EnglishName;\n        dispatch({\n          type: actionTypes.SET_SELECTED_PLACE,\n          val: { id, city, country },\n        });\n      })\n      .catch((error) => {\n        toast.error(`Can't fetch weather by user location`);\n      });\n  };\n\n  return (\n    <div className=\"App\">\n      <ThemeProvider theme={ThemeLight ? lightTheme : darkTheme}>\n        <GlobalStyles />\n        <Router basename={process.env.REACT_APP_PUBLIC_URL}>\n        {/* <Router> */} \n          <Header />\n\n          <Switch>\n            <Route path=\"/favorites\" component={() => <Favorites />} />\n            <Route path=\"/\" component={() => <Home />} />\n            <Redirect to=\"/\" />\n          </Switch>\n\n          <ToastContainer\n            hideProgressBar={true}\n            autoClose={4000}\n            position=\"bottom-right\"\n            pauseOnFocusLoss={false}\n          />\n        </Router>\n      </ThemeProvider>\n    </div>\n  );\n};\n\nexport default App;\n","import * as actionTypes from \"../actions\";\r\n\r\nconst initialState = {\r\n  favorites: [],\r\n  celcius: true,\r\n  themeLight: false,\r\n  selectedPlace: {\r\n    id: null,\r\n    city: null,\r\n    country: null,\r\n  },\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  let newState = { ...state };\r\n  switch (action.type) {\r\n    case actionTypes.TOGGLE_THEME:\r\n      newState.themeLight = !newState.themeLight;\r\n      return newState;\r\n\r\n    case actionTypes.TOGGLE_TEMP:\r\n      newState.celcius = !newState.celcius;\r\n      return newState;\r\n\r\n    case actionTypes.RMV_FAVORITE:\r\n      let newFavorites = newState.favorites.filter(\r\n        (place) => place.id !== newState.selectedPlace.id\r\n      );\r\n      newState.favorites = newFavorites;\r\n      localStorage.setItem('favorites', JSON.stringify(newState.favorites));\r\n      return newState;\r\n\r\n    case actionTypes.SET_FAVORITE:\r\n      let thumbnail = action.val;\r\n      let newFavorite = { ...newState.selectedPlace, thumbnail };\r\n      newState.favorites.push(newFavorite);\r\n      localStorage.setItem('favorites', JSON.stringify(newState.favorites));\r\n      return newState;\r\n\r\n    case actionTypes.SET_SELECTED_PLACE:\r\n      newState.selectedPlace = action.val;\r\n      return newState;\r\n\r\n    case actionTypes.SET_FAVORITES_FROM_STORGE:\r\n      newState.favorites = action.val;\r\n      return newState;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import i18n from \"i18next\";\r\nimport LanguageDetector from \"i18next-browser-languagedetector\";\r\nimport { initReactI18next } from \"react-i18next\";\r\n\r\ni18n\r\n  .use(LanguageDetector)\r\n  .use(initReactI18next)\r\n  .init({\r\n    // we init with resources\r\n    resources: {\r\n      en: {\r\n        translations: {\r\n          header: {\r\n            appName: \"Weather App\",\r\n            celciusAlert: \"Celcius mode enabled\",\r\n            FarenheitAlert: \"Farenheit mode enabled\",\r\n            nav: {\r\n              home: 'Home',\r\n              favorites: 'Favorites'\r\n            }\r\n          },\r\n          home: {\r\n            likeBtn: {\r\n              likedText: \"Location added to favorites\",\r\n              unLikedText: \"Location removed from favorites\",\r\n            },\r\n            searchBox: {\r\n              placeholder: 'Type any location..'\r\n            }\r\n          },\r\n          favorites: {\r\n            title: 'My Favorite Places',\r\n            noPlaces: \"You don't have favorite places.. yet :)\"\r\n          },\r\n          errors: {\r\n            placeTempture: 'Unable to fetch',\r\n            placeTempture2: 'current weather',\r\n            search: 'Unable to get search results, try again later',\r\n            placeIdCall: 'Unable to get weather deails, try again later',\r\n            forcast: 'Unable to fetch forcast for this location',\r\n            image: 'Unbale to fetch pictrue for this location'\r\n          }\r\n        },\r\n      },\r\n    },\r\n    fallbackLng: \"en\",\r\n    debug: true,\r\n\r\n    // have a common namespace used around the full app\r\n    ns: [\"translations\"],\r\n    defaultNS: \"translations\",\r\n\r\n    keySeparator: \".\", // we use content as keys\r\n\r\n    interpolation: {\r\n      escapeValue: false,\r\n    },\r\n  });\r\n\r\nexport default i18n;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore, combineReducers } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport App from \"./App\";\nimport appReducer from \"./store/reducers/appReducer\";\n\n// language support\nimport \"./Language/i18n\";\n\nimport \"./index.scss\";\n\n\n// redux configurations\nconst rootReducer = combineReducers({\n  app: appReducer,\n});\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/world.6958aaf3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bulb-on.09aced8f.svg\";","module.exports = __webpack_public_path__ + \"static/media/bulb-off.3ae74656.svg\";","module.exports = __webpack_public_path__ + \"static/media/temp-light.60740ca9.svg\";","module.exports = __webpack_public_path__ + \"static/media/temp-dark.ab2e43fb.svg\";","module.exports = __webpack_public_path__ + \"static/media/star-ouline.1d8177d9.svg\";","module.exports = __webpack_public_path__ + \"static/media/star-full.9bec326a.svg\";"],"sourceRoot":""}